// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: query.sql

package querytest

import (
	"context"
)

const listUserRelation = `-- name: ListUserRelation :many
SELECT
    owner.id, owner.name,
    consumer.id, consumer.name
FROM
    user_links
    INNER JOIN users AS owner ON owner.id = user_links.owner_id
    INNER JOIN users AS consumer ON consumer.id = user_links.consumer_id
`

type ListUserRelationRow struct {
	Owner    User
	Consumer User
}

func (q *Queries) ListUserRelation(ctx context.Context) ([]ListUserRelationRow, error) {
	rows, err := q.db.QueryContext(ctx, listUserRelation)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListUserRelationRow
	for rows.Next() {
		var i ListUserRelationRow
		if err := rows.Scan(
			&i.Owner.ID,
			&i.Owner.Name,
			&i.Consumer.ID,
			&i.Consumer.Name,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
